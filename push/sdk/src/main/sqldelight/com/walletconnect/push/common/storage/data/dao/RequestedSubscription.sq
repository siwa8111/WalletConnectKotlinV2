import kotlin.Boolean;
import kotlin.Pair;
import kotlin.String;
import kotlin.collections.Map;

CREATE TABLE RequestedSubscriptions (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    subscribe_topic TEXT NOT NULL,
    account TEXT NOT NULL,
    map_of_scope TEXT AS Map<String, Pair<String, Boolean>> NOT NULL,
    response_topic TEXT UNIQUE NOT NULL,
    expiry INTEGER NOT NULL,
    UNIQUE(subscribe_topic, account)
);


insertOrAbortRequestedSubscribtion:
INSERT OR ABORT INTO RequestedSubscriptions(subscribe_topic, account, map_of_scope, response_topic, expiry)
VALUES ( ?, ?, ?, ?, ?);

isAlreadyRequested:
SELECT EXISTS (
    SELECT 1
    FROM RequestedSubscriptions
    WHERE account = ? AND subscribe_topic = ?
    LIMIT 1
);

getRequestedSubscriptionByResponseTopic:
SELECT subscribe_topic, account, map_of_scope, response_topic, expiry
FROM RequestedSubscriptions
WHERE response_topic = ?;

deleteByResponseTopic:
DELETE FROM RequestedSubscriptions
WHERE response_topic = ?;
